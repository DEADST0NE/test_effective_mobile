basePath: /api
definitions:
  subscriptions.CreateSubscription:
    properties:
      end_date:
        description: |-
          Date when the subscription end (MM-YYYY format)
          required: true
          example: "12-2025"
        type: string
      price:
        description: |-
          Monthly subscription cost in RUB
          required: true
          example: 599.99
          minimum: 0
        type: number
      service_name:
        description: |-
          Name of the service being subscribed to
          required: true
          example: Netflix
          min length: 2
          max length: 100
        maxLength: 100
        minLength: 2
        type: string
      start_date:
        description: |-
          Date when the subscription start (MM-YYYY format)
          required: true
          example: "07-2025"
        type: string
      user_id:
        description: |-
          Unique identifier of the user who owns the subscription
          required: true
          example: 4093b3c9-5a25-42d9-8b98-13bba54c9e61
          format: uuid
        type: string
    required:
    - end_date
    - price
    - service_name
    - start_date
    - user_id
    type: object
  subscriptions.ErrorResponse:
    properties:
      errors:
        description: |-
          Optional list of detailed errors
          example: ["invalid user ID format", "price must be positive"]
        items:
          type: string
        type: array
      message:
        description: |-
          Error message
          example: invalid request payload
        type: string
      status_code:
        description: |-
          HTTP status code
          example: 400
        type: integer
    type: object
  subscriptions.ResSubscription:
    properties:
      end_date:
        description: |-
          Optional subscription end date (MM-YYYY format)
          example: "12-2025"
        type: string
      id:
        description: |-
          Unique identifier of the subscription
          example: b2c3d4e5-6789-01fg-hijk-lmnopqrstuvw
          format: uuid
        type: string
      price:
        description: |-
          Monthly subscription cost in RUB
          example: 599.99
        type: number
      service_name:
        description: |-
          Name of the subscribed service
          example: Netflix
        type: string
      start_date:
        description: |-
          Subscription start date (MM-YYYY format)
          example: "07-2025"
        type: string
      user_id:
        description: |-
          Unique identifier of the user
          example: a1b2c3d4-5678-90ef-ghij-klmnopqrstuv
          format: uuid
        type: string
    type: object
  subscriptions.SubscriptionSummaryResponse:
    properties:
      count:
        description: |-
          Number of subscriptions matched
          example: 6
        type: integer
      end_date:
        description: |-
          Period end (MM-YYYY format)
          example: "12-2025"
        type: string
      start_date:
        description: |-
          Period start (MM-YYYY format)
          example: "07-2025"
        type: string
      total_price:
        description: |-
          Total cost for the period
          example: 3599.94
        type: number
    type: object
  subscriptions.UpdateSubscription:
    properties:
      end_date:
        description: |-
          New end date (MM-YYYY format)
          example: "12-2025"
        type: string
      price:
        description: |-
          New monthly cost
          example: 799.99
        type: number
      service_name:
        description: |-
          New service name
          example: Netflix Premium
        maxLength: 100
        minLength: 2
        type: string
      start_date:
        description: |-
          New start date (MM-YYYY format)
          example: "07-2025"
        type: string
    type: object
host: localhost:4000
info:
  contact:
    email: support@example.com
    name: API Support
  description: API for managing user subscriptions
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Subscription Service API
  version: "1.0"
paths:
  /subscriptions:
    get:
      description: Returns a list of subscriptions with optional filtering
      parameters:
      - description: Filter by user ID
        in: query
        name: user_id
        type: string
      - description: Limit the number of results
        in: query
        name: limit
        type: integer
      - description: Offset for pagination
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/subscriptions.ResSubscription'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/subscriptions.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/subscriptions.ErrorResponse'
      summary: List subscriptions
      tags:
      - Subscriptions
    post:
      consumes:
      - application/json
      description: Creates a new service subscription
      parameters:
      - description: Subscription data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/subscriptions.CreateSubscription'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/subscriptions.ResSubscription'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/subscriptions.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/subscriptions.ErrorResponse'
      summary: Create a new subscription
      tags:
      - Subscriptions
  /subscriptions/{id}:
    delete:
      description: Deletes a subscription by ID
      parameters:
      - description: Subscription ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/subscriptions.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/subscriptions.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/subscriptions.ErrorResponse'
      summary: Delete subscription
      tags:
      - Subscriptions
    get:
      description: Returns a single subscription by its ID
      parameters:
      - description: Subscription ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/subscriptions.ResSubscription'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/subscriptions.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/subscriptions.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/subscriptions.ErrorResponse'
      summary: Get subscription by ID
      tags:
      - Subscriptions
    put:
      consumes:
      - application/json
      description: Updates an existing subscription
      parameters:
      - description: Subscription ID
        in: path
        name: id
        required: true
        type: string
      - description: Subscription update data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/subscriptions.UpdateSubscription'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/subscriptions.ResSubscription'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/subscriptions.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/subscriptions.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/subscriptions.ErrorResponse'
      summary: Update subscription
      tags:
      - Subscriptions
  /subscriptions/summary:
    get:
      description: Calculate total cost of subscriptions for selected period with
        optional filters
      parameters:
      - description: End of the period (MM-YYYY format)
        in: query
        name: end_date
        required: true
        type: string
      - description: Service name to filter by
        in: query
        maxLength: 100
        minLength: 2
        name: service_name
        type: string
      - description: Start of the period (MM-YYYY format)
        in: query
        name: start_date
        required: true
        type: string
      - description: User ID to filter by
        in: query
        name: user_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/subscriptions.SubscriptionSummaryResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/subscriptions.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/subscriptions.ErrorResponse'
      summary: Get subscription summary
      tags:
      - Subscriptions
schemes:
- http
swagger: "2.0"
